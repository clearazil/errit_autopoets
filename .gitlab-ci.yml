
stages:
    - test
    - deploy

test:
    stage: test
    image: ci-php7.2:latest
    tags:
        - test
    services:
        - mysql:latest
    script:
        - bash ci/test/docker_install.sh > /dev/null
        - mv app/config/parameters.gitlab-ci.yml app/config/parameters.yml
        # Install composer dependencies
        - wget https://composer.github.io/installer.sig -O - -q | tr -d '\n' > installer.sig
        - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
        - php -r "if (hash_file('SHA384', 'composer-setup.php') === file_get_contents('installer.sig')) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
        - php composer-setup.php
        - php -r "unlink('composer-setup.php'); unlink('installer.sig');"
        - php composer.phar install --optimize-autoloader
        - php bin/console doctrine:schema:create --env=test
        - php bin/console hautelook:fixtures:load --env=test
        - vendor/bin/phpunit --debug
    variables:
        MYSQL_DATABASE: autopoets_test
        MYSQL_USER: gitlab-ci
        MYSQL_ROOT_PASSWORD: secret
        MYSQL_PASSWORD: secret

deploy_staging:
    tags:
        - deploy
    stage: deploy
    image: ci-php7.2:latest
    script:
        - bash ci/deploy/docker_install.sh > /dev/null
        ##
        ## Install ssh-agent if not already installed, it is required by Docker.
        ## (change apt-get to yum if you use an RPM-based image)
        ##
        - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'

        ##
        ## Run ssh-agent (inside the build environment)
        ##
        - eval $(ssh-agent -s)

        ##
        ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
        ## We're using tr to fix line endings which makes ed25519 keys work
        ## without extra base64 encoding.
        ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
        ##
        - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null

        ##
        ## Create the SSH directory and give it the right permissions
        ##
        - mkdir -p ~/.ssh
        - chmod 700 ~/.ssh

        ##
        ## Optionally, if you will be using any Git commands, set the user name and
        ## and email.
        ##
        #- git config --global user.email "user@example.com"
        #- git config --global user.name "User name"

        ##
        ## Assuming you created the SSH_KNOWN_HOSTS variable, uncomment the
        ## following two lines.
        ##
        - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        - chmod 644 ~/.ssh/known_hosts

        ## add the host to known hosts
        - ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

        ## Install deployer
        - curl -LO https://deployer.org/deployer.phar
        ## Deploy to staging
        - php deployer.phar deploy staging

        - echo "Deploy to staging server"
    environment:
        name: staging
        url: http://errit.derkvanderheide.nl
    only:
        - development

# Before script
before_script:


